import path from "path";
import { defineConfig } from "vite";
import { createRequire } from "module";

<%_ if (framework === "vue") { _%>

  <%_ if (frameworkVersion === "2") { _%>
import { createVuePlugin } from "@web-widget/vite-plugin-vue2";
  <%_ } else { _%>
import createVuePlugin from "@vitejs/plugin-vue";
  <%_ } _%>

<%_ } else if (framework === 'react') { _%>

import reactPlugin from "@vitejs/plugin-react";

<%_ } _%>

const require = createRequire(import.meta.url);
const cwd = process.cwd();
const { source, main, module, system } = require(`${cwd}/package.json`);

const outDir = "dist/";
const formatMap = {
  cjs: main,
  esm: module,
  system,
};

// https://vitejs.dev/config/
export default defineConfig({
  build: {
    outDir,
    lib: {
      entry: path.resolve(cwd, source),
      formats: Object.keys(formatMap),
      fileName: (format) => {
        const normalize = formatMap[format].replace(/\.\//, "");
        return normalize.startsWith(outDir)
          ? normalize.replace(outDir, "")
          : normalize;
      },
    },
    rollupOptions: {
      <%_ if (framework === "vue") { _%>

      external: ["vue"],

      <%_ } else if (framework === 'react') { _%>

      external: ["react", "react-dom"],

      <%_ } _%>
    },
  },
  plugins: [
    <%_ if (framework === "vue") { _%>

    createVuePlugin({
      customElement: true,
    }),

    <%_ } else if (framework === 'react') { _%>

    reactPlugin(),

    <%_ } _%>
  ],
});
